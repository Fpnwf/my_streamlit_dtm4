# -*- coding: utf-8 -*-
"""Copy of Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1v_BGx9NQ--b1IlfftJUcHFQwktNEZ4mG
"""

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
st.set_page_config(page_title="Flight Route Clustering", layout="wide")

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô path ‡∏ñ‡πâ‡∏≤‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô)
df = pd.read_csv("Air_Traffic_Passenger_Statistics.csv")

# ‡πÅ‡∏õ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
df['Activity Period'] = pd.to_datetime(df['Activity Period'], errors='coerce', format='%Y%m')
df = df.dropna(subset=["Activity Period"])

# ‡∏™‡∏£‡πâ‡∏≤‡∏á Year, Month, Route
df['Year'] = df['Activity Period'].dt.year
df['Month'] = df['Activity Period'].dt.month
df['Route'] = df['Operating Airline'] + " to " + df['GEO Region']

# ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ
st.title("‚úàÔ∏è Flight Route Clustering for Optimization")

# Sidebar
with st.sidebar:
    st.header("üîß Clustering Configuration")
    k = st.slider("Select number of clusters (k)", 2, 10, 3)

# ‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡πà‡∏≠ route
route_group = df.groupby("Route").agg(
    avg_passenger_per_month=("Passenger Count", "mean"),
    std_passenger=("Passenger Count", "std"),
    total_passenger=("Passenger Count", "sum")
).reset_index()

# ‡∏•‡∏ö‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≤‡∏î‡∏´‡∏≤‡∏¢
route_group.dropna(inplace=True)

# ‡∏ó‡∏≥ Standardize ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô Clustering
features = ['avg_passenger_per_month', 'std_passenger', 'total_passenger']
scaler = StandardScaler()
X_scaled = scaler.fit_transform(route_group[features])

# ‡∏ó‡∏≥ KMeans
kmeans = KMeans(n_clusters=k, random_state=42, n_init=10)
route_group['Cluster'] = kmeans.fit_predict(X_scaled)

# PCA for visualization
pca = PCA(n_components=2)
pca_result = pca.fit_transform(X_scaled)
route_group['PCA1'] = pca_result[:, 0]
route_group['PCA2'] = pca_result[:, 1]

# ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
st.subheader("üìä Clustered Flight Routes")
st.dataframe(route_group[['Route', 'avg_passenger_per_month', 'std_passenger', 'total_passenger', 'Cluster']])

# ‡∏Å‡∏£‡∏≤‡∏ü Scatter Plot
fig, ax = plt.subplots(figsize=(8, 5))
sns.scatterplot(data=route_group, x='PCA1', y='PCA2', hue='Cluster', palette='tab10', s=100)
plt.title("Cluster Visualization (PCA)")
plt.xlabel("PCA 1")
plt.ylabel("PCA 2")
st.pyplot(fig)